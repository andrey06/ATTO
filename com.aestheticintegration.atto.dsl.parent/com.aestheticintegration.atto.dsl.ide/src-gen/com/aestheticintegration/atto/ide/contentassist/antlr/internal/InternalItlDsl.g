/*
 * generated by Xtext 2.12.0
 */
grammar InternalItlDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.aestheticintegration.atto.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.aestheticintegration.atto.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.aestheticintegration.atto.services.ItlDslGrammarAccess;

}
@parser::members {
	private ItlDslGrammarAccess grammarAccess;

	public void setGrammarAccess(ItlDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefImport
entryRuleDefImport
:
{ before(grammarAccess.getDefImportRule()); }
	 ruleDefImport
{ after(grammarAccess.getDefImportRule()); } 
	 EOF 
;

// Rule DefImport
ruleDefImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefImportAccess().getGroup()); }
		(rule__DefImport__Group__0)
		{ after(grammarAccess.getDefImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefDataType
entryRuleDefDataType
:
{ before(grammarAccess.getDefDataTypeRule()); }
	 ruleDefDataType
{ after(grammarAccess.getDefDataTypeRule()); } 
	 EOF 
;

// Rule DefDataType
ruleDefDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefDataTypeAccess().getGroup()); }
		(rule__DefDataType__Group__0)
		{ after(grammarAccess.getDefDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefDataValue
entryRuleDefDataValue
:
{ before(grammarAccess.getDefDataValueRule()); }
	 ruleDefDataValue
{ after(grammarAccess.getDefDataValueRule()); } 
	 EOF 
;

// Rule DefDataValue
ruleDefDataValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefDataValueAccess().getGroup()); }
		(rule__DefDataValue__Group__0)
		{ after(grammarAccess.getDefDataValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeInstance
entryRuleDataTypeInstance
:
{ before(grammarAccess.getDataTypeInstanceRule()); }
	 ruleDataTypeInstance
{ after(grammarAccess.getDataTypeInstanceRule()); } 
	 EOF 
;

// Rule DataTypeInstance
ruleDataTypeInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeInstanceAccess().getGroup()); }
		(rule__DataTypeInstance__Group__0)
		{ after(grammarAccess.getDataTypeInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefFunction
entryRuleDefFunction
:
{ before(grammarAccess.getDefFunctionRule()); }
	 ruleDefFunction
{ after(grammarAccess.getDefFunctionRule()); } 
	 EOF 
;

// Rule DefFunction
ruleDefFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefFunctionAccess().getGroup()); }
		(rule__DefFunction__Group__0)
		{ after(grammarAccess.getDefFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputParam
entryRuleInputParam
:
{ before(grammarAccess.getInputParamRule()); }
	 ruleInputParam
{ after(grammarAccess.getInputParamRule()); } 
	 EOF 
;

// Rule InputParam
ruleInputParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputParamAccess().getGroup()); }
		(rule__InputParam__Group__0)
		{ after(grammarAccess.getInputParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getGroup()); }
		(rule__FunctionBody__Group__0)
		{ after(grammarAccess.getFunctionBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpOrIfStatement
entryRuleExpOrIfStatement
:
{ before(grammarAccess.getExpOrIfStatementRule()); }
	 ruleExpOrIfStatement
{ after(grammarAccess.getExpOrIfStatementRule()); } 
	 EOF 
;

// Rule ExpOrIfStatement
ruleExpOrIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpOrIfStatementAccess().getAlternatives()); }
		(rule__ExpOrIfStatement__Alternatives)
		{ after(grammarAccess.getExpOrIfStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolExpression
entryRuleBoolExpression
:
{ before(grammarAccess.getBoolExpressionRule()); }
	 ruleBoolExpression
{ after(grammarAccess.getBoolExpressionRule()); } 
	 EOF 
;

// Rule BoolExpression
ruleBoolExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getGroup()); }
		(rule__BoolExpression__Group__0)
		{ after(grammarAccess.getBoolExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName2
entryRuleQualifiedName2
:
{ before(grammarAccess.getQualifiedName2Rule()); }
	 ruleQualifiedName2
{ after(grammarAccess.getQualifiedName2Rule()); } 
	 EOF 
;

// Rule QualifiedName2
ruleQualifiedName2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedName2Access().getGroup()); }
		(rule__QualifiedName2__Group__0)
		{ after(grammarAccess.getQualifiedName2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputExpression
entryRuleOutputExpression
:
{ before(grammarAccess.getOutputExpressionRule()); }
	 ruleOutputExpression
{ after(grammarAccess.getOutputExpressionRule()); } 
	 EOF 
;

// Rule OutputExpression
ruleOutputExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getAlternatives()); }
		(rule__OutputExpression__Alternatives)
		{ after(grammarAccess.getOutputExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefTest
entryRuleDefTest
:
{ before(grammarAccess.getDefTestRule()); }
	 ruleDefTest
{ after(grammarAccess.getDefTestRule()); } 
	 EOF 
;

// Rule DefTest
ruleDefTest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefTestAccess().getGroup()); }
		(rule__DefTest__Group__0)
		{ after(grammarAccess.getDefTestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeValue
entryRuleDataTypeValue
:
{ before(grammarAccess.getDataTypeValueRule()); }
	 ruleDataTypeValue
{ after(grammarAccess.getDataTypeValueRule()); } 
	 EOF 
;

// Rule DataTypeValue
ruleDataTypeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeValueAccess().getAlternatives()); }
		(rule__DataTypeValue__Alternatives)
		{ after(grammarAccess.getDataTypeValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanAssignment_0()); }
		(rule__DataType__BooleanAssignment_0)
		{ after(grammarAccess.getDataTypeAccess().getBooleanAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanObjAssignment_1()); }
		(rule__DataType__BooleanObjAssignment_1)
		{ after(grammarAccess.getDataTypeAccess().getBooleanObjAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getShortAssignment_2()); }
		(rule__DataType__ShortAssignment_2)
		{ after(grammarAccess.getDataTypeAccess().getShortAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getShortObjAssignment_3()); }
		(rule__DataType__ShortObjAssignment_3)
		{ after(grammarAccess.getDataTypeAccess().getShortObjAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntAssignment_4()); }
		(rule__DataType__IntAssignment_4)
		{ after(grammarAccess.getDataTypeAccess().getIntAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntObjAssignment_5()); }
		(rule__DataType__IntObjAssignment_5)
		{ after(grammarAccess.getDataTypeAccess().getIntObjAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getLongAssignment_6()); }
		(rule__DataType__LongAssignment_6)
		{ after(grammarAccess.getDataTypeAccess().getLongAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getLongObjAssignment_7()); }
		(rule__DataType__LongObjAssignment_7)
		{ after(grammarAccess.getDataTypeAccess().getLongObjAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatAssignment_8()); }
		(rule__DataType__FloatAssignment_8)
		{ after(grammarAccess.getDataTypeAccess().getFloatAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatObjAssignment_9()); }
		(rule__DataType__FloatObjAssignment_9)
		{ after(grammarAccess.getDataTypeAccess().getFloatObjAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDoubleAssignment_10()); }
		(rule__DataType__DoubleAssignment_10)
		{ after(grammarAccess.getDataTypeAccess().getDoubleAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDoubleObjAssignment_11()); }
		(rule__DataType__DoubleObjAssignment_11)
		{ after(grammarAccess.getDataTypeAccess().getDoubleObjAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getStringAssignment_12()); }
		(rule__DataType__StringAssignment_12)
		{ after(grammarAccess.getDataTypeAccess().getStringAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getDefDataTypeAssignment_13()); }
		(rule__DataType__DefDataTypeAssignment_13)
		{ after(grammarAccess.getDataTypeAccess().getDefDataTypeAssignment_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementAssignment_0()); }
		(rule__Statement__IfStatementAssignment_0)
		{ after(grammarAccess.getStatementAccess().getIfStatementAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getOutputExpressionAssignment_1()); }
		(rule__Statement__OutputExpressionAssignment_1)
		{ after(grammarAccess.getStatementAccess().getOutputExpressionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__SignAlternatives_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getSignAmpersandAmpersandKeyword_3_0_0_0()); }
		'&&'
		{ after(grammarAccess.getIfStatementAccess().getSignAmpersandAmpersandKeyword_3_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStatementAccess().getSignVerticalLineVerticalLineKeyword_3_0_0_1()); }
		'||'
		{ after(grammarAccess.getIfStatementAccess().getSignVerticalLineVerticalLineKeyword_3_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOrIfStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpOrIfStatementAccess().getOutputExpressionAssignment_0()); }
		(rule__ExpOrIfStatement__OutputExpressionAssignment_0)
		{ after(grammarAccess.getExpOrIfStatementAccess().getOutputExpressionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpOrIfStatementAccess().getIfStatementAssignment_1()); }
		(rule__ExpOrIfStatement__IfStatementAssignment_1)
		{ after(grammarAccess.getExpOrIfStatementAccess().getIfStatementAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__SignAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignLessThanSignEqualsSignKeyword_1_0_0_0()); }
		'<='
		{ after(grammarAccess.getBoolExpressionAccess().getSignLessThanSignEqualsSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignGreaterThanSignEqualsSignKeyword_1_0_0_1()); }
		'>='
		{ after(grammarAccess.getBoolExpressionAccess().getSignGreaterThanSignEqualsSignKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignGreaterThanSignKeyword_1_0_0_2()); }
		'>'
		{ after(grammarAccess.getBoolExpressionAccess().getSignGreaterThanSignKeyword_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignLessThanSignKeyword_1_0_0_3()); }
		'<'
		{ after(grammarAccess.getBoolExpressionAccess().getSignLessThanSignKeyword_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignEqualsSignKeyword_1_0_0_4()); }
		'='
		{ after(grammarAccess.getBoolExpressionAccess().getSignEqualsSignKeyword_1_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignLessThanSignGreaterThanSignKeyword_1_0_0_5()); }
		'<>'
		{ after(grammarAccess.getBoolExpressionAccess().getSignLessThanSignGreaterThanSignKeyword_1_0_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getVariableAssignment_0()); }
		(rule__Literal__VariableAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getPrimaryAssignment_1()); }
		(rule__Literal__PrimaryAssignment_1)
		{ after(grammarAccess.getLiteralAccess().getPrimaryAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_0()); }
		(rule__OutputExpression__Group_0__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_1()); }
		(rule__OutputExpression__Group_1__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_2()); }
		(rule__OutputExpression__Group_2__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_3()); }
		(rule__OutputExpression__Group_3__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_4()); }
		(rule__OutputExpression__Group_4__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_5()); }
		(rule__OutputExpression__Group_5__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_6()); }
		(rule__OutputExpression__Group_6__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getOutputExpressionAccess().getGroup_7()); }
		(rule__OutputExpression__Group_7__0)
		{ after(grammarAccess.getOutputExpressionAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeValueAccess().getPrimaryAssignment_0()); }
		(rule__DataTypeValue__PrimaryAssignment_0)
		{ after(grammarAccess.getDataTypeValueAccess().getPrimaryAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeValueAccess().getDataTypeInstanceAssignment_1()); }
		(rule__DataTypeValue__DataTypeInstanceAssignment_1)
		{ after(grammarAccess.getDataTypeValueAccess().getDataTypeInstanceAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeValueAccess().getDefDataValueAssignment_2()); }
		(rule__DataTypeValue__DefDataValueAssignment_2)
		{ after(grammarAccess.getDataTypeValueAccess().getDefDataValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
	(rule__Model__ImportsAssignment_0)*
	{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDatatypesAssignment_1()); }
	(rule__Model__DatatypesAssignment_1)*
	{ after(grammarAccess.getModelAccess().getDatatypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDatavaluesAssignment_2()); }
	(rule__Model__DatavaluesAssignment_2)*
	{ after(grammarAccess.getModelAccess().getDatavaluesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFunctionsAssignment_3()); }
	(rule__Model__FunctionsAssignment_3)*
	{ after(grammarAccess.getModelAccess().getFunctionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTestsAssignment_4()); }
	(rule__Model__TestsAssignment_4)*
	{ after(grammarAccess.getModelAccess().getTestsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefImport__Group__0__Impl
	rule__DefImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getDefImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefImportAccess().getNameAssignment_1()); }
	(rule__DefImport__NameAssignment_1)
	{ after(grammarAccess.getDefImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefDataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataType__Group__0__Impl
	rule__DefDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDefDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataType__Group__1__Impl
	rule__DefDataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataTypeAccess().getNameAssignment_1()); }
	(rule__DefDataType__NameAssignment_1)
	{ after(grammarAccess.getDefDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataType__Group__2__Impl
	rule__DefDataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDefDataTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataType__Group__3__Impl
	rule__DefDataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataTypeAccess().getFieldsAssignment_3()); }
	(rule__DefDataType__FieldsAssignment_3)*
	{ after(grammarAccess.getDefDataTypeAccess().getFieldsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDefDataTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefDataValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataValue__Group__0__Impl
	rule__DefDataValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataValueAccess().getDatavalueKeyword_0()); }
	'datavalue'
	{ after(grammarAccess.getDefDataValueAccess().getDatavalueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataValue__Group__1__Impl
	rule__DefDataValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataValueAccess().getNameAssignment_1()); }
	(rule__DefDataValue__NameAssignment_1)
	{ after(grammarAccess.getDefDataValueAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataValue__Group__2__Impl
	rule__DefDataValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataValueAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDefDataValueAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefDataValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefDataValueAccess().getDataTypeInstanceAssignment_3()); }
	(rule__DefDataValue__DataTypeInstanceAssignment_3)
	{ after(grammarAccess.getDefDataValueAccess().getDataTypeInstanceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeInstance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group__0__Impl
	rule__DataTypeInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeAssignment_0()); }
	(rule__DataTypeInstance__DefDataTypeAssignment_0)
	{ after(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group__1__Impl
	rule__DataTypeInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDataTypeInstanceAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group__2__Impl
	rule__DataTypeInstance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getGroup_2()); }
	(rule__DataTypeInstance__Group_2__0)*
	{ after(grammarAccess.getDataTypeInstanceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDataTypeInstanceAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeInstance__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group_2__0__Impl
	rule__DataTypeInstance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getLiteralsAssignment_2_0()); }
	(rule__DataTypeInstance__LiteralsAssignment_2_0)
	{ after(grammarAccess.getDataTypeInstanceAccess().getLiteralsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getGroup_2_1()); }
	(rule__DataTypeInstance__Group_2_1__0)*
	{ after(grammarAccess.getDataTypeInstanceAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeInstance__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group_2_1__0__Impl
	rule__DataTypeInstance__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getDataTypeInstanceAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataTypeInstance__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeInstanceAccess().getLiteralsAssignment_2_1_1()); }
	(rule__DataTypeInstance__LiteralsAssignment_2_1_1)
	{ after(grammarAccess.getDataTypeInstanceAccess().getLiteralsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__0__Impl
	rule__DefFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getDefFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__1__Impl
	rule__DefFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getNameAssignment_1()); }
	(rule__DefFunction__NameAssignment_1)
	{ after(grammarAccess.getDefFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__2__Impl
	rule__DefFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDefFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__3__Impl
	rule__DefFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getGroup_3()); }
	(rule__DefFunction__Group_3__0)?
	{ after(grammarAccess.getDefFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__4__Impl
	rule__DefFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDefFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__5__Impl
	rule__DefFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getDefFunctionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__6__Impl
	rule__DefFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getOutputDataTypeAssignment_6()); }
	(rule__DefFunction__OutputDataTypeAssignment_6)
	{ after(grammarAccess.getDefFunctionAccess().getOutputDataTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__7__Impl
	rule__DefFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getDefFunctionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__8__Impl
	rule__DefFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getFunctionBodyAssignment_8()); }
	(rule__DefFunction__FunctionBodyAssignment_8)
	{ after(grammarAccess.getDefFunctionAccess().getFunctionBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getDefFunctionAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefFunction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group_3__0__Impl
	rule__DefFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getInputParamsAssignment_3_0()); }
	(rule__DefFunction__InputParamsAssignment_3_0)
	{ after(grammarAccess.getDefFunctionAccess().getInputParamsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getGroup_3_1()); }
	(rule__DefFunction__Group_3_1__0)*
	{ after(grammarAccess.getDefFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefFunction__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group_3_1__0__Impl
	rule__DefFunction__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getDefFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefFunction__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefFunctionAccess().getInputParamsAssignment_3_1_1()); }
	(rule__DefFunction__InputParamsAssignment_3_1_1)
	{ after(grammarAccess.getDefFunctionAccess().getInputParamsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputParam__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParam__Group__0__Impl
	rule__InputParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParamAccess().getNameAssignment_0()); }
	(rule__InputParam__NameAssignment_0)
	{ after(grammarAccess.getInputParamAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParam__Group__1__Impl
	rule__InputParam__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParamAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInputParamAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParam__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParamAccess().getInputDataTypeAssignment_2()); }
	(rule__InputParam__InputDataTypeAssignment_2)
	{ after(grammarAccess.getInputParamAccess().getInputDataTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group__0__Impl
	rule__FunctionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getFunctionBodyAction_0()); }
	()
	{ after(grammarAccess.getFunctionBodyAccess().getFunctionBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBodyAccess().getStatementAssignment_1()); }
	(rule__FunctionBody__StatementAssignment_1)*
	{ after(grammarAccess.getFunctionBodyAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getInputBoolExpressionAssignment_2()); }
	(rule__IfStatement__InputBoolExpressionAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getInputBoolExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
	(rule__IfStatement__Group_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenKeyword_5()); }
	'then'
	{ after(grammarAccess.getIfStatementAccess().getThenKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
	rule__IfStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenExpOrIfStatementAssignment_6()); }
	(rule__IfStatement__ThenExpOrIfStatementAssignment_6)
	{ after(grammarAccess.getIfStatementAccess().getThenExpOrIfStatementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__7__Impl
	rule__IfStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_7()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__8__Impl
	rule__IfStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseExpOrIfStatementAssignment_8()); }
	(rule__IfStatement__ElseExpOrIfStatementAssignment_8)
	{ after(grammarAccess.getIfStatementAccess().getElseExpOrIfStatementAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEndifKeyword_9()); }
	'endif'
	{ after(grammarAccess.getIfStatementAccess().getEndifKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getSignAssignment_3_0()); }
	(rule__IfStatement__SignAssignment_3_0)
	{ after(grammarAccess.getIfStatementAccess().getSignAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getInputBoolExpressionAssignment_3_1()); }
	(rule__IfStatement__InputBoolExpressionAssignment_3_1)
	{ after(grammarAccess.getIfStatementAccess().getInputBoolExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group__0__Impl
	rule__BoolExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getLiteralLeftAssignment_0()); }
	(rule__BoolExpression__LiteralLeftAssignment_0)
	{ after(grammarAccess.getBoolExpressionAccess().getLiteralLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getGroup_1()); }
	(rule__BoolExpression__Group_1__0)?
	{ after(grammarAccess.getBoolExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group_1__0__Impl
	rule__BoolExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getSignAssignment_1_0()); }
	(rule__BoolExpression__SignAssignment_1_0)
	{ after(grammarAccess.getBoolExpressionAccess().getSignAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExpressionAccess().getLiteralRightAssignment_1_1()); }
	(rule__BoolExpression__LiteralRightAssignment_1_1)
	{ after(grammarAccess.getBoolExpressionAccess().getLiteralRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName2__Group__0__Impl
	rule__QualifiedName2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedName2Access().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedName2Access().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQualifiedName2Access().getGroup_1()); }
		(rule__QualifiedName2__Group_1__0)
		{ after(grammarAccess.getQualifiedName2Access().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getQualifiedName2Access().getGroup_1()); }
		(rule__QualifiedName2__Group_1__0)*
		{ after(grammarAccess.getQualifiedName2Access().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName2__Group_1__0__Impl
	rule__QualifiedName2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedName2Access().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedName2Access().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedName2Access().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedName2Access().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBooleanAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBooleanAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueBooleanAssignment_0_1()); }
	(rule__Primary__ValueBooleanAssignment_0_1)
	{ after(grammarAccess.getPrimaryAccess().getValueBooleanAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIntegerAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getIntegerAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueIntegerAssignment_1_1()); }
	(rule__Primary__ValueIntegerAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getValueIntegerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFloatAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getFloatAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueFloatAssignment_2_1()); }
	(rule__Primary__ValueFloatAssignment_2_1)
	{ after(grammarAccess.getPrimaryAccess().getValueFloatAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getStringAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getStringAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueStringAssignment_3_1()); }
	(rule__Primary__ValueStringAssignment_3_1)
	{ after(grammarAccess.getPrimaryAccess().getValueStringAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNullAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNullAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueNullAssignment_4_1()); }
	(rule__Primary__ValueNullAssignment_4_1)
	{ after(grammarAccess.getPrimaryAccess().getValueNullAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_0__0__Impl
	rule__OutputExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getBooleanAction_0_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getBooleanAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueBooleanAssignment_0_1()); }
	(rule__OutputExpression__ValueBooleanAssignment_0_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueBooleanAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_1__0__Impl
	rule__OutputExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getIntegerAction_1_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getIntegerAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueIntegerAssignment_1_1()); }
	(rule__OutputExpression__ValueIntegerAssignment_1_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueIntegerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_2__0__Impl
	rule__OutputExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getFloatAction_2_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getFloatAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueFloatAssignment_2_1()); }
	(rule__OutputExpression__ValueFloatAssignment_2_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueFloatAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_3__0__Impl
	rule__OutputExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getStringAction_3_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getStringAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueStringAssignment_3_1()); }
	(rule__OutputExpression__ValueStringAssignment_3_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueStringAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_4__0__Impl
	rule__OutputExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getNullAction_4_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getNullAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueNullAssignment_4_1()); }
	(rule__OutputExpression__ValueNullAssignment_4_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueNullAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_5__0__Impl
	rule__OutputExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceAction_5_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceAssignment_5_1()); }
	(rule__OutputExpression__DataTypeInstanceAssignment_5_1)
	{ after(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_6__0__Impl
	rule__OutputExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getDefDataValueAction_6_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getDefDataValueAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueDataValueAssignment_6_1()); }
	(rule__OutputExpression__ValueDataValueAssignment_6_1)
	{ after(grammarAccess.getOutputExpressionAccess().getValueDataValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpression__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_7__0__Impl
	rule__OutputExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getExceptionAction_7_0()); }
	()
	{ after(grammarAccess.getOutputExpressionAccess().getExceptionAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_7__1__Impl
	rule__OutputExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getExceptionKeyword_7_1()); }
	'Exception'
	{ after(grammarAccess.getOutputExpressionAccess().getExceptionKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_7__2__Impl
	rule__OutputExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getLeftParenthesisKeyword_7_2()); }
	'('
	{ after(grammarAccess.getOutputExpressionAccess().getLeftParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_7__3__Impl
	rule__OutputExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getValueExceptionAssignment_7_3()); }
	(rule__OutputExpression__ValueExceptionAssignment_7_3)
	{ after(grammarAccess.getOutputExpressionAccess().getValueExceptionAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionAccess().getRightParenthesisKeyword_7_4()); }
	')'
	{ after(grammarAccess.getOutputExpressionAccess().getRightParenthesisKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefTest__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__0__Impl
	rule__DefTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getTestKeyword_0()); }
	'test'
	{ after(grammarAccess.getDefTestAccess().getTestKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__1__Impl
	rule__DefTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getNameAssignment_1()); }
	(rule__DefTest__NameAssignment_1)
	{ after(grammarAccess.getDefTestAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__2__Impl
	rule__DefTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDefTestAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__3__Impl
	rule__DefTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getDefFuncAssignment_3()); }
	(rule__DefTest__DefFuncAssignment_3)
	{ after(grammarAccess.getDefTestAccess().getDefFuncAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__4__Impl
	rule__DefTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getDefTestAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__5__Impl
	rule__DefTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getGroup_5()); }
	(rule__DefTest__Group_5__0)?
	{ after(grammarAccess.getDefTestAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__6__Impl
	rule__DefTest__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getDefTestAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__7__Impl
	rule__DefTest__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getDefTestAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getOutputExpressionAssignment_8()); }
	(rule__DefTest__OutputExpressionAssignment_8)
	{ after(grammarAccess.getDefTestAccess().getOutputExpressionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefTest__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group_5__0__Impl
	rule__DefTest__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getDataTypeValuesAssignment_5_0()); }
	(rule__DefTest__DataTypeValuesAssignment_5_0)
	{ after(grammarAccess.getDefTestAccess().getDataTypeValuesAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getGroup_5_1()); }
	(rule__DefTest__Group_5_1__0)*
	{ after(grammarAccess.getDefTestAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefTest__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group_5_1__0__Impl
	rule__DefTest__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getDefTestAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefTest__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefTestAccess().getDataTypeValuesAssignment_5_1_1()); }
	(rule__DefTest__DataTypeValuesAssignment_5_1_1)
	{ after(grammarAccess.getDefTestAccess().getDataTypeValuesAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsDefImportParserRuleCall_0_0()); }
		ruleDefImport
		{ after(grammarAccess.getModelAccess().getImportsDefImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DatatypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDatatypesDefDataTypeParserRuleCall_1_0()); }
		ruleDefDataType
		{ after(grammarAccess.getModelAccess().getDatatypesDefDataTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DatavaluesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDatavaluesDefDataValueParserRuleCall_2_0()); }
		ruleDefDataValue
		{ after(grammarAccess.getModelAccess().getDatavaluesDefDataValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunctionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFunctionsDefFunctionParserRuleCall_3_0()); }
		ruleDefFunction
		{ after(grammarAccess.getModelAccess().getFunctionsDefFunctionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TestsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTestsDefTestParserRuleCall_4_0()); }
		ruleDefTest
		{ after(grammarAccess.getModelAccess().getTestsDefTestParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefImport__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefImportAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDefImportAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataType__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefDataTypeAccess().getFieldsInputParamParserRuleCall_3_0()); }
		ruleInputParam
		{ after(grammarAccess.getDefDataTypeAccess().getFieldsInputParamParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefDataValueAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefDataValueAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefDataValue__DataTypeInstanceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefDataValueAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_3_0()); }
		ruleDataTypeInstance
		{ after(grammarAccess.getDefDataValueAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__DefDataTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeDefDataTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeDefDataTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeDefDataTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDataTypeInstanceAccess().getDefDataTypeDefDataTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__LiteralsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeInstanceAccess().getLiteralsLiteralParserRuleCall_2_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getDataTypeInstanceAccess().getLiteralsLiteralParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeInstance__LiteralsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeInstanceAccess().getLiteralsLiteralParserRuleCall_2_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getDataTypeInstanceAccess().getLiteralsLiteralParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefFunctionAccess().getNameQualifiedName2ParserRuleCall_1_0()); }
		ruleQualifiedName2
		{ after(grammarAccess.getDefFunctionAccess().getNameQualifiedName2ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__InputParamsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefFunctionAccess().getInputParamsInputParamParserRuleCall_3_0_0()); }
		ruleInputParam
		{ after(grammarAccess.getDefFunctionAccess().getInputParamsInputParamParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__InputParamsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefFunctionAccess().getInputParamsInputParamParserRuleCall_3_1_1_0()); }
		ruleInputParam
		{ after(grammarAccess.getDefFunctionAccess().getInputParamsInputParamParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__OutputDataTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefFunctionAccess().getOutputDataTypeDataTypeParserRuleCall_6_0()); }
		ruleDataType
		{ after(grammarAccess.getDefFunctionAccess().getOutputDataTypeDataTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefFunction__FunctionBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefFunctionAccess().getFunctionBodyFunctionBodyParserRuleCall_8_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getDefFunctionAccess().getFunctionBodyFunctionBodyParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputParamAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInputParamAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParam__InputDataTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputParamAccess().getInputDataTypeDataTypeParserRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getInputParamAccess().getInputDataTypeDataTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__BooleanAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanBooleanKeyword_0_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getBooleanBooleanKeyword_0_0()); }
			'boolean'
			{ after(grammarAccess.getDataTypeAccess().getBooleanBooleanKeyword_0_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getBooleanBooleanKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__BooleanObjAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getBooleanObjBooleanKeyword_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getBooleanObjBooleanKeyword_1_0()); }
			'Boolean'
			{ after(grammarAccess.getDataTypeAccess().getBooleanObjBooleanKeyword_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getBooleanObjBooleanKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ShortAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getShortShortKeyword_2_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getShortShortKeyword_2_0()); }
			'short'
			{ after(grammarAccess.getDataTypeAccess().getShortShortKeyword_2_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getShortShortKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ShortObjAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getShortObjShortKeyword_3_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getShortObjShortKeyword_3_0()); }
			'Short'
			{ after(grammarAccess.getDataTypeAccess().getShortObjShortKeyword_3_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getShortObjShortKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IntAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIntIntKeyword_4_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getIntIntKeyword_4_0()); }
			'int'
			{ after(grammarAccess.getDataTypeAccess().getIntIntKeyword_4_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getIntIntKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IntObjAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIntObjIntegerKeyword_5_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getIntObjIntegerKeyword_5_0()); }
			'Integer'
			{ after(grammarAccess.getDataTypeAccess().getIntObjIntegerKeyword_5_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getIntObjIntegerKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__LongAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getLongLongKeyword_6_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getLongLongKeyword_6_0()); }
			'long'
			{ after(grammarAccess.getDataTypeAccess().getLongLongKeyword_6_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getLongLongKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__LongObjAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getLongObjLongKeyword_7_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getLongObjLongKeyword_7_0()); }
			'Long'
			{ after(grammarAccess.getDataTypeAccess().getLongObjLongKeyword_7_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getLongObjLongKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FloatAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatFloatKeyword_8_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getFloatFloatKeyword_8_0()); }
			'float'
			{ after(grammarAccess.getDataTypeAccess().getFloatFloatKeyword_8_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getFloatFloatKeyword_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FloatObjAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatObjFloatKeyword_9_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getFloatObjFloatKeyword_9_0()); }
			'Float'
			{ after(grammarAccess.getDataTypeAccess().getFloatObjFloatKeyword_9_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getFloatObjFloatKeyword_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DoubleAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getDoubleDoubleKeyword_10_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getDoubleDoubleKeyword_10_0()); }
			'double'
			{ after(grammarAccess.getDataTypeAccess().getDoubleDoubleKeyword_10_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getDoubleDoubleKeyword_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DoubleObjAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getDoubleObjDoubleKeyword_11_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getDoubleObjDoubleKeyword_11_0()); }
			'Double'
			{ after(grammarAccess.getDataTypeAccess().getDoubleObjDoubleKeyword_11_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getDoubleObjDoubleKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__StringAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getStringStringKeyword_12_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getStringStringKeyword_12_0()); }
			'String'
			{ after(grammarAccess.getDataTypeAccess().getStringStringKeyword_12_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getStringStringKeyword_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DefDataTypeAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getDefDataTypeDefDataTypeCrossReference_13_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getDefDataTypeDefDataTypeIDTerminalRuleCall_13_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeAccess().getDefDataTypeDefDataTypeIDTerminalRuleCall_13_0_1()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getDefDataTypeDefDataTypeCrossReference_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getStatementStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getFunctionBodyAccess().getStatementStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStatementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementIfStatementParserRuleCall_0_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementIfStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__OutputExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getOutputExpressionOutputExpressionParserRuleCall_1_0()); }
		ruleOutputExpression
		{ after(grammarAccess.getStatementAccess().getOutputExpressionOutputExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__InputBoolExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getInputBoolExpressionBoolExpressionParserRuleCall_2_0()); }
		ruleBoolExpression
		{ after(grammarAccess.getIfStatementAccess().getInputBoolExpressionBoolExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__SignAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getSignAlternatives_3_0_0()); }
		(rule__IfStatement__SignAlternatives_3_0_0)
		{ after(grammarAccess.getIfStatementAccess().getSignAlternatives_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__InputBoolExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getInputBoolExpressionBoolExpressionParserRuleCall_3_1_0()); }
		ruleBoolExpression
		{ after(grammarAccess.getIfStatementAccess().getInputBoolExpressionBoolExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenExpOrIfStatementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getThenExpOrIfStatementExpOrIfStatementParserRuleCall_6_0()); }
		ruleExpOrIfStatement
		{ after(grammarAccess.getIfStatementAccess().getThenExpOrIfStatementExpOrIfStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseExpOrIfStatementAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseExpOrIfStatementExpOrIfStatementParserRuleCall_8_0()); }
		ruleExpOrIfStatement
		{ after(grammarAccess.getIfStatementAccess().getElseExpOrIfStatementExpOrIfStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOrIfStatement__OutputExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpOrIfStatementAccess().getOutputExpressionOutputExpressionParserRuleCall_0_0()); }
		ruleOutputExpression
		{ after(grammarAccess.getExpOrIfStatementAccess().getOutputExpressionOutputExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpOrIfStatement__IfStatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpOrIfStatementAccess().getIfStatementIfStatementParserRuleCall_1_0()); }
		ruleIfStatement
		{ after(grammarAccess.getExpOrIfStatementAccess().getIfStatementIfStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__LiteralLeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getLiteralLeftLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getBoolExpressionAccess().getLiteralLeftLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__SignAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getSignAlternatives_1_0_0()); }
		(rule__BoolExpression__SignAlternatives_1_0_0)
		{ after(grammarAccess.getBoolExpressionAccess().getSignAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpression__LiteralRightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExpressionAccess().getLiteralRightLiteralParserRuleCall_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getBoolExpressionAccess().getLiteralRightLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getVariableQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLiteralAccess().getVariableQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__PrimaryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getPrimaryPrimaryParserRuleCall_1_0()); }
		rulePrimary
		{ after(grammarAccess.getLiteralAccess().getPrimaryPrimaryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueBooleanAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueBooleanBOOLEANTerminalRuleCall_0_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getPrimaryAccess().getValueBooleanBOOLEANTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueIntegerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueIntegerINTEGERTerminalRuleCall_1_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPrimaryAccess().getValueIntegerINTEGERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueFloatAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueFloatFLOATTerminalRuleCall_2_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getPrimaryAccess().getValueFloatFLOATTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueStringSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimaryAccess().getValueStringSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueNullAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueNullNULLTerminalRuleCall_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getPrimaryAccess().getValueNullNULLTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueBooleanAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueBooleanBOOLEANTerminalRuleCall_0_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getOutputExpressionAccess().getValueBooleanBOOLEANTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueIntegerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueIntegerINTEGERTerminalRuleCall_1_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getOutputExpressionAccess().getValueIntegerINTEGERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueFloatAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueFloatFLOATTerminalRuleCall_2_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getOutputExpressionAccess().getValueFloatFLOATTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueStringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueStringSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputExpressionAccess().getValueStringSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueNullAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueNullNULLTerminalRuleCall_4_1_0()); }
		RULE_NULL
		{ after(grammarAccess.getOutputExpressionAccess().getValueNullNULLTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__DataTypeInstanceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_5_1_0()); }
		ruleDataTypeInstance
		{ after(grammarAccess.getOutputExpressionAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueDataValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueDataValueDefDataValueCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getOutputExpressionAccess().getValueDataValueDefDataValueIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOutputExpressionAccess().getValueDataValueDefDataValueIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getOutputExpressionAccess().getValueDataValueDefDataValueCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpression__ValueExceptionAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionAccess().getValueExceptionSTRINGTerminalRuleCall_7_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputExpressionAccess().getValueExceptionSTRINGTerminalRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefTestAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefTestAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__DefFuncAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefTestAccess().getDefFuncDefFunctionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDefTestAccess().getDefFuncDefFunctionQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDefTestAccess().getDefFuncDefFunctionQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDefTestAccess().getDefFuncDefFunctionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__DataTypeValuesAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefTestAccess().getDataTypeValuesDataTypeValueParserRuleCall_5_0_0()); }
		ruleDataTypeValue
		{ after(grammarAccess.getDefTestAccess().getDataTypeValuesDataTypeValueParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__DataTypeValuesAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefTestAccess().getDataTypeValuesDataTypeValueParserRuleCall_5_1_1_0()); }
		ruleDataTypeValue
		{ after(grammarAccess.getDefTestAccess().getDataTypeValuesDataTypeValueParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefTest__OutputExpressionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefTestAccess().getOutputExpressionOutputExpressionParserRuleCall_8_0()); }
		ruleOutputExpression
		{ after(grammarAccess.getDefTestAccess().getOutputExpressionOutputExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeValue__PrimaryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeValueAccess().getPrimaryPrimaryParserRuleCall_0_0()); }
		rulePrimary
		{ after(grammarAccess.getDataTypeValueAccess().getPrimaryPrimaryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeValue__DataTypeInstanceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeValueAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_1_0()); }
		ruleDataTypeInstance
		{ after(grammarAccess.getDataTypeValueAccess().getDataTypeInstanceDataTypeInstanceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeValue__DefDataValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeValueAccess().getDefDataValueDefDataValueCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDataTypeValueAccess().getDefDataValueDefDataValueIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataTypeValueAccess().getDefDataValueDefDataValueIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDataTypeValueAccess().getDefDataValueDefDataValueCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NULL : ('null'|'NULL');

RULE_BOOLEAN : ('false'|'true');

RULE_INTEGER : ('0'..'9')+;

RULE_FLOAT : (('0'..'9')+ '.'|'.' ('0'..'9')+|('0'..'9')+ '.' ('0'..'9')+);

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
