/**
 * generated by Xtext 2.12.0
 */
package com.aestheticintegration.atto.generator;

import com.aestheticintegration.atto.generator.GeneratorOcaml;
import com.aestheticintegration.atto.generator.GeneratorTim;
import com.aestheticintegration.atto.itlDsl.Model;
import javax.inject.Inject;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class ItlDslGenerator extends AbstractGenerator {
  @Inject
  private GeneratorOcaml generatorOcaml;
  
  @Inject
  private GeneratorTim generatorTim;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    fsa.generateFile(this.generatorOcaml.className(resource), this.generatorOcaml.compile(((Model) _head)));
    EObject _head_1 = IterableExtensions.<EObject>head(resource.getContents());
    fsa.generateFile(this.generatorTim.className(resource), this.generatorTim.compile(((Model) _head_1)));
  }
}
